// <auto-generated />
using System;
using AppCapasCitas.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppCapasCitas.API.Migrations
{
    [DbContext(typeof(CitasDbContext))]
    partial class CitasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppCapasCitas.API.Models.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<bool>("EsJefatura")
                        .HasColumnType("bit")
                        .HasColumnName("es_jefatura");

                    b.Property<int?>("EspecialidadId")
                        .HasColumnType("int")
                        .HasColumnName("especialidad_id");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<int>("NivelJerarquico")
                        .HasColumnType("int")
                        .HasColumnName("nivel_jerarquico");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_cargo");

                    b.HasIndex("EspecialidadId")
                        .HasDatabaseName("ix_cargo_especialidad_id");

                    b.ToTable("cargo", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<int?>("ConsultorioId")
                        .HasColumnType("int")
                        .HasColumnName("consultorio_id");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("diagnostico");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_hora");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int")
                        .HasColumnName("medico_id");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("motivo");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notas");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int")
                        .HasColumnName("paciente_id");

                    b.Property<string>("Tratamiento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tratamiento");

                    b.HasKey("Id")
                        .HasName("pk_citas");

                    b.HasIndex("ConsultorioId")
                        .HasDatabaseName("ix_citas_consultorio_id");

                    b.HasIndex("Estado")
                        .HasDatabaseName("ix_citas_estado");

                    b.HasIndex("FechaHora")
                        .HasDatabaseName("ix_citas_fecha_hora");

                    b.HasIndex("MedicoId")
                        .HasDatabaseName("ix_citas_medico_id");

                    b.HasIndex("PacienteId")
                        .HasDatabaseName("ix_citas_paciente_id");

                    b.ToTable("citas", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Consultorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<string>("Equipamiento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("equipamiento");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int")
                        .HasColumnName("hospital_id");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("NumeroConsultorio")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("numero_consultorio");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefono");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ubicacion");

                    b.HasKey("Id")
                        .HasName("pk_consultorio");

                    b.HasIndex("HospitalId")
                        .HasDatabaseName("ix_consultorio_hospital_id");

                    b.ToTable("consultorio", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_especialidad");

                    b.ToTable("especialidad", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.HistorialMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("altura");

                    b.Property<int?>("CitaId")
                        .HasColumnType("int")
                        .HasColumnName("cita_id");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("diagnostico");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int")
                        .HasColumnName("medico_id");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notas");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int")
                        .HasColumnName("paciente_id");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("peso");

                    b.Property<string>("PresionArterial")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("presion_arterial");

                    b.Property<decimal>("Temperatura")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("temperatura");

                    b.Property<string>("Tratamiento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tratamiento");

                    b.HasKey("Id")
                        .HasName("pk_historial_medico");

                    b.HasIndex("CitaId")
                        .HasDatabaseName("ix_historial_medico_cita_id");

                    b.HasIndex("MedicoId")
                        .HasDatabaseName("ix_historial_medico_medico_id");

                    b.HasIndex("PacienteId")
                        .HasDatabaseName("ix_historial_medico_paciente_id");

                    b.ToTable("historial_medico", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.HorarioTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<int>("DiaSemana")
                        .HasColumnType("int")
                        .HasColumnName("dia_semana");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time")
                        .HasColumnName("hora_fin");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time")
                        .HasColumnName("hora_inicio");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int")
                        .HasColumnName("medico_id");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.HasKey("Id")
                        .HasName("pk_horarios_trabajo");

                    b.HasIndex("MedicoId")
                        .HasDatabaseName("ix_horarios_trabajo_medico_id");

                    b.ToTable("horarios_trabajo", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codigo_postal");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("direccion");

                    b.Property<string>("EmailContacto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_contacto");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("HorarioAtencion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("horario_atencion");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("municipio");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nombre");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pais");

                    b.Property<string>("ServiciosEspeciales")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("servicios_especiales");

                    b.Property<string>("SitioWeb")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sitio_web");

                    b.Property<string>("TelefonoPrincipal")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefono_principal");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_hospital");

                    b.ToTable("hospital", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.MedicamentoRecetado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<string>("Dosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dosis");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Frecuencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("frecuencia");

                    b.Property<string>("InstruccionesEspeciales")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("instrucciones_especiales");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<string>("NombreMedicamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre_medicamento");

                    b.Property<int>("RecetaMedicaId")
                        .HasColumnType("int")
                        .HasColumnName("receta_medica_id");

                    b.HasKey("Id")
                        .HasName("pk_medicamentos_recetados");

                    b.HasIndex("RecetaMedicaId")
                        .HasDatabaseName("ix_medicamentos_recetados_receta_medica_id");

                    b.ToTable("medicamentos_recetados", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("Biografia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("biografia");

                    b.Property<string>("CedulaProfesional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cedula_profesional");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<int?>("HospitalId")
                        .HasColumnType("int")
                        .HasColumnName("hospital_id");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.HasKey("Id")
                        .HasName("pk_medico");

                    b.HasIndex("HospitalId")
                        .HasDatabaseName("ix_medico_hospital_id");

                    b.ToTable("medico", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.MedicoEspecialidadHospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<int>("CargoId")
                        .HasColumnType("int")
                        .HasColumnName("cargo_id");

                    b.Property<string>("Consultorio")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("consultorio");

                    b.Property<decimal?>("CostoConsultaEspecifico")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costo_consulta_especifico");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("int")
                        .HasColumnName("especialidad_id");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_inicio");

                    b.Property<string>("HorarioAtencion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("horario_atencion");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int")
                        .HasColumnName("hospital_id");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int")
                        .HasColumnName("medico_id");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<string>("NumeroContrato")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numero_contrato");

                    b.Property<string>("TipoContratacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipo_contratacion");

                    b.HasKey("Id")
                        .HasName("pk_medico_especialidad_hospital");

                    b.HasIndex(new[] { "CargoId" }, "ix_medico_especialidad_hospital_cargo_id")
                        .HasDatabaseName("ix_medico_especialidad_hospital_cargo_id");

                    b.HasIndex(new[] { "EspecialidadId" }, "ix_medico_especialidad_hospital_especialidad_id")
                        .HasDatabaseName("ix_medico_especialidad_hospital_especialidad_id");

                    b.HasIndex(new[] { "HospitalId" }, "ix_medico_especialidad_hospital_hospital_id")
                        .HasDatabaseName("ix_medico_especialidad_hospital_hospital_id");

                    b.HasIndex(new[] { "MedicoId", "EspecialidadId", "HospitalId" }, "ix_medico_especialidad_hospital_medico_id_especialidad_id_hospital_id")
                        .IsUnique()
                        .HasDatabaseName("ix_medico_especialidad_hospital_medico_id_especialidad_id_hospital_id");

                    b.ToTable("medico_especialidad_hospital", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("Alergias")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("alergias");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<string>("EnfermedadesCronicas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("enfermedades_cronicas");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("genero");

                    b.Property<string>("MedicamentosActuales")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("medicamentos_actuales");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.HasKey("Id")
                        .HasName("pk_paciente");

                    b.ToTable("paciente", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<int?>("CitaId")
                        .HasColumnType("int")
                        .HasColumnName("cita_id");

                    b.Property<string>("Comprobante")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comprobante");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_pago");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("metodo_pago");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("monto");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notas");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int")
                        .HasColumnName("paciente_id");

                    b.HasKey("Id")
                        .HasName("pk_pagos");

                    b.HasIndex("CitaId")
                        .IsUnique()
                        .HasDatabaseName("ix_pagos_cita_id")
                        .HasFilter("[cita_id] IS NOT NULL");

                    b.HasIndex("Estado")
                        .HasDatabaseName("ix_pagos_estado");

                    b.HasIndex("PacienteId")
                        .HasDatabaseName("ix_pagos_paciente_id");

                    b.ToTable("pagos", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.RecetaMedica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<int?>("CitaId")
                        .HasColumnType("int")
                        .HasColumnName("cita_id");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_emision");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_vencimiento");

                    b.Property<string>("Instrucciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("instrucciones");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int")
                        .HasColumnName("medico_id");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int")
                        .HasColumnName("paciente_id");

                    b.HasKey("Id")
                        .HasName("pk_recetas_medicas");

                    b.HasIndex("CitaId")
                        .HasDatabaseName("ix_recetas_medicas_cita_id");

                    b.HasIndex("FechaEmision")
                        .HasDatabaseName("ix_recetas_medicas_fecha_emision");

                    b.HasIndex("MedicoId")
                        .HasDatabaseName("ix_recetas_medicas_medico_id");

                    b.HasIndex("PacienteId")
                        .HasDatabaseName("ix_recetas_medicas_paciente_id");

                    b.ToTable("recetas_medicas", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("apellido");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("celular");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ciudad");

                    b.Property<int>("CodigoPais")
                        .HasColumnType("int")
                        .HasColumnName("codigo_pais");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creado_por");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<Guid>("IdentityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("identity_id");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int")
                        .HasColumnName("medico_id");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modificado_por");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int")
                        .HasColumnName("paciente_id");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pais");

                    b.Property<Guid?>("RolId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rol_id");

                    b.Property<string>("RolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rol_name");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefono");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime2")
                        .HasColumnName("ultimo_login");

                    b.HasKey("Id")
                        .HasName("pk_usuario");

                    b.HasIndex("IdentityId")
                        .IsUnique()
                        .HasDatabaseName("ix_usuario_identity_id");

                    b.HasIndex("MedicoId")
                        .IsUnique()
                        .HasDatabaseName("ix_usuario_medico_id")
                        .HasFilter("[medico_id] IS NOT NULL");

                    b.HasIndex("PacienteId")
                        .IsUnique()
                        .HasDatabaseName("ix_usuario_paciente_id")
                        .HasFilter("[paciente_id] IS NOT NULL");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Cargo", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("EspecialidadId")
                        .HasConstraintName("fk_cargo_especialidad_especialidad_id");

                    b.Navigation("Especialidad");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Cita", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.Consultorio", "Consultorio")
                        .WithMany("Citas")
                        .HasForeignKey("ConsultorioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_citas_consultorio_consultorio_id");

                    b.HasOne("AppCapasCitas.API.Models.Medico", "Medico")
                        .WithMany("Citas")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_citas_medico_medico_id");

                    b.HasOne("AppCapasCitas.API.Models.Paciente", "Paciente")
                        .WithMany("Citas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_citas_paciente_paciente_id");

                    b.Navigation("Consultorio");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Consultorio", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.Hospital", "Hospital")
                        .WithMany("Consultorios")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_consultorio_hospital_hospital_id");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.HistorialMedico", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_historial_medico_citas_cita_id");

                    b.HasOne("AppCapasCitas.API.Models.Medico", "Medico")
                        .WithMany("HistorialMedicos")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_historial_medico_medico_medico_id");

                    b.HasOne("AppCapasCitas.API.Models.Paciente", "Paciente")
                        .WithMany("HistorialMedico")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_historial_medico_paciente_paciente_id");

                    b.Navigation("Cita");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.HorarioTrabajo", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.Medico", "Medico")
                        .WithMany("HorariosTrabajo")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_horarios_trabajo_medico_medico_id");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.MedicamentoRecetado", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.RecetaMedica", "RecetaMedica")
                        .WithMany("Medicamentos")
                        .HasForeignKey("RecetaMedicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_medicamentos_recetados_recetas_medicas_receta_medica_id");

                    b.Navigation("RecetaMedica");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Medico", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.Hospital", null)
                        .WithMany("Medicos")
                        .HasForeignKey("HospitalId")
                        .HasConstraintName("fk_medico_hospital_hospital_id");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.MedicoEspecialidadHospital", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_medico_especialidad_hospital_cargo_cargo_id");

                    b.HasOne("AppCapasCitas.API.Models.Especialidad", "Especialidad")
                        .WithMany("MedicoEspecialidadHospitales")
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_medico_especialidad_hospital_especialidad_especialidad_id");

                    b.HasOne("AppCapasCitas.API.Models.Hospital", "Hospital")
                        .WithMany("MedicoEspecialidadHospitales")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_medico_especialidad_hospital_hospital_hospital_id");

                    b.HasOne("AppCapasCitas.API.Models.Medico", "Medico")
                        .WithMany("MedicoEspecialidadHospitales")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_medico_especialidad_hospital_medico_medico_id");

                    b.Navigation("Cargo");

                    b.Navigation("Especialidad");

                    b.Navigation("Hospital");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Pago", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.Cita", "Cita")
                        .WithOne("Pago")
                        .HasForeignKey("AppCapasCitas.API.Models.Pago", "CitaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_pagos_citas_cita_id");

                    b.HasOne("AppCapasCitas.API.Models.Paciente", "Paciente")
                        .WithMany("Pagos")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pagos_paciente_paciente_id");

                    b.Navigation("Cita");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.RecetaMedica", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.Cita", "Cita")
                        .WithMany("RecetasMedicas")
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_recetas_medicas_citas_cita_id");

                    b.HasOne("AppCapasCitas.API.Models.Medico", "Medico")
                        .WithMany("RecetasMedicas")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_recetas_medicas_medico_medico_id");

                    b.HasOne("AppCapasCitas.API.Models.Paciente", "Paciente")
                        .WithMany("RecetasMedicas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_recetas_medicas_paciente_paciente_id");

                    b.Navigation("Cita");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Usuario", b =>
                {
                    b.HasOne("AppCapasCitas.API.Models.Medico", "Medico")
                        .WithOne("Usuario")
                        .HasForeignKey("AppCapasCitas.API.Models.Usuario", "MedicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_usuario_medico_medico_id");

                    b.HasOne("AppCapasCitas.API.Models.Paciente", "Paciente")
                        .WithOne("Usuario")
                        .HasForeignKey("AppCapasCitas.API.Models.Usuario", "PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_usuario_paciente_paciente_id");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Cita", b =>
                {
                    b.Navigation("Pago");

                    b.Navigation("RecetasMedicas");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Consultorio", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Especialidad", b =>
                {
                    b.Navigation("MedicoEspecialidadHospitales");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Hospital", b =>
                {
                    b.Navigation("Consultorios");

                    b.Navigation("MedicoEspecialidadHospitales");

                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Medico", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("HistorialMedicos");

                    b.Navigation("HorariosTrabajo");

                    b.Navigation("MedicoEspecialidadHospitales");

                    b.Navigation("RecetasMedicas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.Paciente", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("HistorialMedico");

                    b.Navigation("Pagos");

                    b.Navigation("RecetasMedicas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AppCapasCitas.API.Models.RecetaMedica", b =>
                {
                    b.Navigation("Medicamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
