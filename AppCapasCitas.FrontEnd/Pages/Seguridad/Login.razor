@page "/"
@using AppCapasCitas.DTO.Request.Identity
@inject IUsuarioProxy proxy
@inject NavigationManager navigationManager

<h3>Login</h3>

<EditForm Model="loginRequest" OnValidSubmit="OnLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText class="form-control" @bind-Value="loginRequest.Email" />
        <ValidationMessage For="() => loginRequest.Email" />
    </div>
    <div class="mb-3">
        <label class="form-label">Contraseña</label>
        <InputText type="password" class="form-control" @bind-Value="loginRequest.Password" />
        <ValidationMessage For="() => loginRequest.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Iniciar sesión</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-2">@errorMessage</div>
}

@code {
    private AuthRequest loginRequest = new();
    private string errorMessage = string.Empty;

    private async Task OnLogin()
    {
        errorMessage = string.Empty;
        var response = await proxy.LoginAsync(loginRequest);
        if (response == null || !response.IsSuccess)
        {
            
            errorMessage = response?.Message ?? "Error al iniciar sesión.";
            return;
        }
        

        // Redirigir o guardar token según tu lógica
        navigationManager.NavigateTo("/");
    }
}